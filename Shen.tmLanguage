<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>shen</string>
	</array>
	<key>name</key>
	<string>Shen</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#parens</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\\\.*$</string>
					<key>name</key>
					<string>comment.line</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\\\*</string>
					<key>end</key>
					<string>\*\\</string>
					<key>name</key>
					<string>comment.block</string>
				</dict>
			</array>
		</dict>
		<key>expressions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literals</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#symbols</string>
				</dict>
			</array>
		</dict>
		<key>literals</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;=^|[\s()\[\]])[+-]*\d+\.?\d*(?=$|[\s;()\[\]])</string>
					<key>name</key>
					<string>constant.numeric</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=^|[\s()\[\]])[+-]*\d+\.?\d*[^\s;()\[\]]+(?=$|[\s;()\[\]])</string>
					<key>name</key>
					<string>invalid.illegal</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=^|[\s()\[\]])(true|false)(?=$|[\s;()\[\]])</string>
					<key>name</key>
					<string>constant.language</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\(\)</string>
					<key>name</key>
					<string>constant.language</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=^|[\s()\[\]])_(?=$|[\s;()\[\]])</string>
					<key>name</key>
					<string>constant.language</string>
				</dict>
			</array>
		</dict>
		<key>parens</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.group</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#parens</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#squares</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>special</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;=^|[\s()\[\]{}])(and|or|if|do|lambda|freeze|let|cond|case|trap-error|where|package|defun|/.|-&gt;|&lt;-|--&gt;|&lt;--|:=|define|defmacro|defcc|defprolog|datatype)(?=$|[\s;()\[\]{}])</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>squares</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\[</string>
					<key>end</key>
					<string>\]</string>
					<key>name</key>
					<string>meta.group</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#parens</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#squares</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>standard</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;=^|[\s()\[\]{}])(=|&lt;|&gt;|&lt;=|&gt;=|\+|-|\*|/)(?=$|[\s;()\[\]{}])</string>
					<key>name</key>
					<string>keyword.operator</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=^|[\s()\[\]{}])(eval-kl|get|put|set|value|fail|not|intern|output|print|map|for-each|append|length|cons|hd|tl|cn|str|string\?|boolean\?|symbol\?|number\?|empty\?|cons\?)(?=$|[\s;()\[\]{}])</string>
					<key>name</key>
					<string>support.function</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=^|[\s()\[\]{}])\*(language|implementation|version|release|os|port|porters|home-directory|history|call|infs|process-counter|catch|tc|continue-repl-loop)\*(?=$|[\s;()\[\]{}])</string>
					<key>name</key>
					<string>support.variable</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=^|[\s()\[\]{}])(string|boolean|symbol|number|list)(?=$|[\s;()\[\]{}])</string>
					<key>name</key>
					<string>support.type</string>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(~A|~R|~S|~%|c#\d;|c#\d\d;|c#\d\d\d;)</string>
							<key>name</key>
							<string>constant.character.escape</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>symbols</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#special</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#standard</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variables</string>
				</dict>
			</array>
		</dict>
		<key>variables</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Definition Names</string>
					<key>match</key>
					<string>(?&lt;=define\s)([^\s()\[\]{}]*)(?=$|[\s;()\[\]{}])</string>
					<key>name</key>
					<string>entity.name.function</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Macro Names</string>
					<key>match</key>
					<string>(?&lt;=defmacro\s)([^\s()\[\]{}]*)(?=$|[\s;()\[\]{}])</string>
					<key>name</key>
					<string>entity.name.function</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Yacc Names</string>
					<key>match</key>
					<string>(?&lt;=defcc\s)([^\s()\[\]{}]*)(?=$|[\s;()\[\]{}])</string>
					<key>name</key>
					<string>entity.name.tag</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Prolog Names</string>
					<key>match</key>
					<string>(?&lt;=defprolog\s)([^\s()\[\]{}]*)(?=$|[\s;()\[\]{}])</string>
					<key>name</key>
					<string>entity.name.function</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Package Names</string>
					<key>match</key>
					<string>(?&lt;=package\s)([^\s()\[\]{}]*)(?=$|[\s;()\[\]{}])</string>
					<key>name</key>
					<string>entity.name.section</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Data Types</string>
					<key>match</key>
					<string>(?&lt;=datatype\s)([^\s()\[\]{}]*)(?=$|[\s;()\[\]{}])</string>
					<key>name</key>
					<string>entity.name.type</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Local Variables</string>
					<key>match</key>
					<string>(?&lt;=^|[\s()\[\]{}])([A-Z][^\s()\[\]{}]*)(?=$|[\s;()\[\]{}])</string>
					<key>name</key>
					<string>variable.language</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Yacc Rule</string>
					<key>match</key>
					<string>(?&lt;=^|[\s()\[\]])(&lt;[^\s()\[\]]*&gt;)(?=$|[\s;()\[\]])</string>
					<key>name</key>
					<string>entity.name.tag</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Idle Symbols</string>
					<key>match</key>
					<string>(?&lt;=^|[\s)\[\]{}])([^A-Z\s()\[\];\|{}][^\s()\[\];]*)(?=$|[\s;()\[\]{}])</string>
					<key>name</key>
					<string>constant.language</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.shen</string>
	<key>uuid</key>
	<string>4f20d927-cddd-4fd7-a7a6-9739f008439d</string>
</dict>
</plist>
