# [PackageDev] target_format: plist, ext: tmLanguage
---

name: Shen
scopeName: source.shen
fileTypes: [shen]
uuid: 4f20d927-cddd-4fd7-a7a6-9739f008439d

patterns:
- include: '#comments'
- include: '#parens'

repository:

  comments:
    patterns:
    - name: comment.line.documentation.source.shen
      match: \\\\.*$
    - name: comment.block.source.shen
      begin: \\\*
      end: \*\\

  parens:
    patterns:
    - name: meta.group.shen
      begin: \(
      beginCaptures:
        '0': {name: punctuation.definition.group.begin.shen}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.shen}
      patterns:
      - include: '#expressions'
      - include: '#parens'
      - include: '#squares'

  squares:
    patterns:
    - name: meta.group.shen
      begin: \[
      beginCaptures:
        '0': {name: punctuation.definition.group.begin.shen}
      end: \]
      endCaptures:
        '0': {name: punctuation.definition.group.end.shen}
      patterns:
      - include: '#expressions'
      - include: '#parens'
      - include: '#squares'

  expressions:
    patterns:
    - include: '#comments'
    - include: '#strings'
    - include: '#literals'
    - include: '#keywords'
    - include: '#variables'

  strings:
    patterns:
    - name: string.quoted.double.source.shen
      begin: '"'
      beginCaptures:
        '0': {name: punctuation.definition.string.begin.shen}
      end: '"'
      endCaptures:
        '0': {name: punctuation.definition.string.end.shen}
      patterns:
      - match: (~A|~R|~S|~%|c#\d;|c#\d\d;|c#\d\d\d;)
        name: constant.character.escape.shen

  literals:
    patterns:
    - name: constant.numeric.source.shen
      match: (?<=^|[\s()\[\]])[+-]*\d+\.?\d*(?=$|[\s()\[\]])
    - name: constant.language.source.shen
      match: ((?<=^|[\s()\[\]])(true|false)(?=$|[\s()\[\]])|\(\))

  keywords:
    patterns:
    - name: keyword.control.source.shen
      match: (?<=^|[\s()\[\]])(and|or|if|lambda|freeze|let|cond|simple-error|trap-error|where|package|defun|/.|->|<-|:=|define|defmacro|defcc|defprolog)(?=$|[\s()\[\]])

  variables:
    patterns:
    - name: variable.language.source.shen
      match: (?<=^|[\s()\[\]])([A-Z][^\s()\[\]]*)(?=$|[\s()\[\]])

...
